#!/bin/sh

. /usr/share/common

ensure_command "openRTSP"
ensure_command "jct"

CLIP_FILE="/tmp/vbuffer.mp4"
LOCK_FILE="/tmp/vbuffer.lock"
TEMP_FILE="/tmp/vbuffer.tmp"

stream_number=1
stream_endpoint="$(cat /run/prudynt/rtsp/stream${stream_number}/endpoint)"
rtsp_stream="rtsp://127.0.0.1/$stream_endpoint"

vformat="-4"
record_videofmt="mp4"
record_duration=10
record_filename="%hostname/%Y/%m/%d/%H-%M-%S"

STREAMER_APP="prudynt"
STREAMER_CONF_FILE="/etc/prudynt.json"

SELF_NAME="$(basename "$0")"

if ! is_streamer_running; then
	echo_error "Streamer is not running"
	exit 1
fi

if is_streamer_disabled; then
	echo_error "Streamer disabled"
	exit 1
fi

# "parameter" "default"
read_config() {
	jct "$STREAMER_CONF_FILE" get "$1" | tr -d '"'
	[ -z "$_" ] || echo "$2"
}

start() {
	echo_title "Starting video buffer"

	if pidof -o $$ $SELF_NAME > /dev/null; then
		echo_error "is already running"
		exit 1
	fi

	motion_enabled=$(jct "$STREAMER_CONF_FILE" get "motion.enabled")
	if [ "true" != "$motion_enabled" ]; then
		echo_error "Motion Guard disabled"
		exit 1
	fi

	rtsp_username=$(read_config "rtsp.username" "thingino")
	rtsp_password=$(read_config "rtsp.password" "thingino")
	stream_width=$(cat /run/prudynt/rtsp/stream${stream_number}/width)
	stream_height=$(cat /run/prudynt/rtsp/stream${stream_number}/height)
	stream_fps=$(cat /run/prudynt/rtsp/stream${stream_number}/fps)

	while : ; do
		openRTSP -V -u $rtsp_username $rtsp_password \
			-w $stream_width -h $stream_height -f $stream_fps \
			-d $record_duration $vformat \
			-t $rtsp_stream > "$TEMP_FILE" \
			2>/dev/null
		while [ -f "$LOCK_FILE" ]; do
			age=$(( $(date +%s) - $(date +%s -r "$LOCK_FILE") ))
			if [ "$age" -gt 100 ]; then
				echo_info "Lock file is expired"
				rm -f "$LOCK_FILE"
			fi
			echo -n "."
			sleep 1
		done
		mv -f "$TEMP_FILE" "$CLIP_FILE"
	done &
}

# FIXME: $0 does not work here
stop() {
	echo_title "Stopping video buffer"

	pid=$(pidof -o %PPID -s $SELF_NAME)
	if [ -z "$pid" ]; then
		echo_info "Nothing to stop"
	else
		while [ -n "$pid" ]; do
			kill -9 $pid > /dev/null
			pid=$(pidof -o %PPID -s $SELF_NAME)
		done
	fi

	if [ -f "$CLIP_FILE" ]; then
		rm -f "$CLIP_FILE"
	fi

	if [ -f "$LOCK_FILE" ]; then
		rm -f "$LOCK_FILE"
	fi

	if [ -f "$TEMP_FILE" ]; then
		sleep $record_duration
		rm "$TEMP_FILE"
	fi
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop || true
		sleep 1
		start
		;;
	*)
		usage "{start|stop|restart}"
		;;
esac

exit 0
